2008-09-10
  incremental pumping straight from sqlite.

  old way:
  time python PumpSqliteToMysql.py /archive/mirror/ted/TED.db >coco.sql
  time mysql ted < coco.sql

  experiments: 
    -sqlite dump:
        sqlite3 /archive/mirror/ted/TED.db ".dumo rdu_second_data
    -sqlite incremental select
        getInv Time as watermark
        .mode insert rdu_second_data

        Time stuff:
        # unix time for now
        select strftime("%s","now"); 
        # round trip
        select datetime(strftime("%s","now"),"unixepoch","localtime");

        # convert time from ted to iso
        datetime((tick/10000-62135582400000)/1000,"unixepoch","localtime")
        # convert time to ted:

        select tick,kw from rdu_second_data where tick>=watermark;
        select tick,kw from rdu_second_data where tick>='0633566196000008750';

    -sqlite transform for mysql
--------------------------------
To pull TED.db from aria:

from  aria: to acerama
scp -p Programs/EnergyInc/TEDFootprints/TED.db .
rsync -v --progress TED.db 192.168.3.143:TED.db


Python dates:
>>> time.strptime("1970-01-01 00:00:00", "%Y-%m-%d %H:%M:%S")
(1970, 1, 1, 0, 0, 0, 3, 1, -1)

>>> time.ctime((633534107180007500L / 10000 -62135582400000L)/1000)
'Mon Aug  4 01:38:38 2008'

-62135582400000L was derived from java as "01-01-02 23:00:00".getTime()

def cnvTime(tedTimeString):
    secs = ( string.atol(tedTimeString / 10000 - 62135582400000 ) / 1000
    time.strftime("%Y-%m-%d %H:%M:%S",time.localtime(secs))

Mysql stuff:
mysqladmin create ted

DROP TABLE IF EXISTS watt;
CREATE TABLE watt (
  stamp datetime NOT NULL default '1970-01-01 00:00:00',
  watt int(11) NOT NULL default '0',
  PRIMARY KEY wattByStamp (stamp)
); 
DROP TABLE IF EXISTS wattminute;
CREATE TABLE wattminute (
  stamp datetime NOT NULL default '1970-01-01 00:00:00',
  watt int(11) NOT NULL default '0',
  PRIMARY KEY wattByStamp (stamp)
); 
DROP TABLE IF EXISTS watthour;
CREATE TABLE watthour (
  stamp datetime NOT NULL default '1970-01-01 00:00:00',
  watt int(11) NOT NULL default '0',
  PRIMARY KEY wattByStamp (stamp)
); 
DROP TABLE IF EXISTS wattday;
CREATE TABLE wattday (
  stamp datetime NOT NULL default '1970-01-01 00:00:00',
  watt int(11) NOT NULL default '0',
  PRIMARY KEY wattByStamp (stamp)
); 

# load watt:minute|hour|day table
replace into wattminute select left(stamp,16) as g,avg(watt) from watt group by g;
replace into watthour select left(stamp,13) as g,avg(watt) from watt group by g;
replace into wattday select left(stamp,10) as g,avg(watt) from watt group by g;

# examine minute grouping
select left(stamp,16) as g,min(stamp),avg(watt),count(*) from watt where stamp>'2008-08-08 12:00:00' group by g;

while true; do mysql -B ted -e "select now(),count(*) from watt"; sleep 10; done

Historgram of Run-Lengths:
python ReadSqlite3.py ~/TED.db |cut -d\  -f3|uniq -c|awk '{print $1}'|sort -n|uniq -c

sqlite3 to ssh/mysql
emacs PumpSqlite3ToMysql.py 
time python PumpSqlite3ToMysql.py ~/TED.db | ssh euler mysql ted


interesting selects:
 select w.stamp, w.watt from watt w where w.stamp>='2008-08-07 00:00:00' AND w.stamp< ADDDATE('2008-08-07 00:00:00', INTERVAL 10 second); 
 select w.watt, (select max(w2.watt) from watt w2 where w2.stamp>=w.stamp and w2.stamp<ADDDATE(w.stamp,INTERVAL 10 second)) as m  from watt w where w.stamp>='2008-08-07 00:00:00' limit 10; 

Mounting ted on cantor:
mkdir /ted
mount -t cifs //aria/ted /ted
read http://wiki.centos.org/TipsAndTricks/WindowsShares for other options for auto-mounting

see /archive/mirror/ted/doMirror for cron archiving

on cantor:
time python PumpSqliteToMysql.py /archive/mirror/ted/TED.db |mysql ted

GDATA python stuff:
downloaded from http://code.google.com/p/gdata-python-client/
ran:
  python setup.py install --home=~/python
and then:
# running 
export PYTHONPATH=~/python/lib/python/; python appendToGDATA.py --user myname --pw mypass

ssh euler 'mysql -B -N ted -e "select concat(left(stamp,13),\":00:00\") as g,avg(watt) from watt group by g"'| awk '{printf "python appendToGDATA.py --user daniel.lauzon --pw solosekret --stamp \"%s %s\" --watt %s\n",$1,$2,$3}' 
  or appen to: > coco.sh
  and
  source coco.sh
  ## captca after 200 rows...!!!

while true; do mysql -N -B ted -e "select left(stamp,10) as g,count(*),min(stamp),max(stamp) from watt where stamp>'2008-09-09' group by g"; echo; sleep 10; done


to produce Motion Spreadsheet:
mysql ted -e "delete from event"

mysql -B ted -e "select concat(watt,'-',duration) as label,left(stamp,10) as day,watt,duration,watt*duration/1000/60/60 as kwh from event"|awk '{printf "%s,%s,%s,%s,%s\n",$1,$2,$3,$4,$5}'>coco.csv

Ted-hour
mysql  -B ted -e "select stamp,watt from watthour"|awk '{printf "%s %s,%s\n",$1,$2,$3}'>ted-hour.csv
